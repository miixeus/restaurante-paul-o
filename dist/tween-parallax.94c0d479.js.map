{"version":3,"sources":["js/tween-parallax.js"],"names":["TWEEN_FACTOR","calculateTweenValuesParallax","emblaApi","engine","internalEngine","scrollProgress","scrollSnapList","map","scrollSnap","index","slidesInView","includes","diffToTarget","options","loop","slideLooper","loopPoints","forEach","loopItem","target","get","sign","Math","setupTweenParallax","tweenNodes","slideNodes","slideNode","querySelector","applyTweenParallax","tweenValue","style","transform","concat","removeTweenParallax","slide","removeAttribute","exports"],"mappings":";AA4CC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,wBAAA,EA5CD,IAAMA,EAAe,IAEfC,EAA+B,SAACC,GACpC,IAAMC,EAASD,EAASE,iBAClBC,EAAiBH,EAASG,iBAEhC,OAAOH,EAASI,iBAAiBC,IAAI,SAACC,EAAYC,GAChD,IAAKP,EAASQ,eAAeC,SAASF,GAAQ,OAAO,EACrD,IAAIG,EAAeJ,EAAaH,EAYhC,OAVIF,EAAOU,QAAQC,MACjBX,EAAOY,YAAYC,WAAWC,QAAQ,SAACC,GACrC,IAAMC,EAASD,EAASC,SAASC,MACjC,GAAIX,IAAUS,EAAST,OAAoB,IAAXU,EAAc,CAC5C,IAAME,EAAOC,KAAKD,KAAKF,IACT,IAAVE,IAAaT,EAAeJ,GAAc,EAAIH,IACrC,IAATgB,IAAYT,EAAeJ,GAAc,EAAIH,OAIhDO,IAAiB,EAAIZ,GAAgB,OAInCuB,EAAqB,SAACrB,GACjC,IAAMsB,EAAatB,EAChBuB,aACAlB,IAAI,SAACmB,GAAS,OAAKA,EAAUC,cAAc,6BAa9C,MAAO,CACLC,mBAZyB,WACL3B,EAA6BC,GACrCe,QAAQ,SAACY,EAAYpB,GAC/Be,EAAWf,GAAOqB,MAAMC,UAASC,cAAAA,OAAiBH,EAAa,QAUjEI,oBAN0B,WAC1BT,EAAWP,QAAQ,SAACiB,GAAK,OAAKA,EAAMC,gBAAgB,cAOvDC,QAAAb,mBAAAA","file":"tween-parallax.94c0d479.js","sourceRoot":"..","sourcesContent":["const TWEEN_FACTOR = 1.2\r\n\r\nconst calculateTweenValuesParallax = (emblaApi) => {\r\n  const engine = emblaApi.internalEngine()\r\n  const scrollProgress = emblaApi.scrollProgress()\r\n\r\n  return emblaApi.scrollSnapList().map((scrollSnap, index) => {\r\n    if (!emblaApi.slidesInView().includes(index)) return 0\r\n    let diffToTarget = scrollSnap - scrollProgress\r\n\r\n    if (engine.options.loop) {\r\n      engine.slideLooper.loopPoints.forEach((loopItem) => {\r\n        const target = loopItem.target().get()\r\n        if (index === loopItem.index && target !== 0) {\r\n          const sign = Math.sign(target)\r\n          if (sign === -1) diffToTarget = scrollSnap - (1 + scrollProgress)\r\n          if (sign === 1) diffToTarget = scrollSnap + (1 - scrollProgress)\r\n        }\r\n      })\r\n    }\r\n    return diffToTarget * (-1 / TWEEN_FACTOR) * 100\r\n  })\r\n}\r\n\r\nexport const setupTweenParallax = (emblaApi) => {\r\n  const tweenNodes = emblaApi\r\n    .slideNodes()\r\n    .map((slideNode) => slideNode.querySelector('.embla__parallax__layer'))\r\n\r\n  const applyTweenParallax = () => {\r\n    const tweenValues = calculateTweenValuesParallax(emblaApi)\r\n    tweenValues.forEach((tweenValue, index) => {\r\n      tweenNodes[index].style.transform = `translateX(${tweenValue}%`\r\n    })\r\n  }\r\n\r\n  const removeTweenParallax = () => {\r\n    tweenNodes.forEach((slide) => slide.removeAttribute('style'))\r\n  }\r\n\r\n  return {\r\n    applyTweenParallax,\r\n    removeTweenParallax,\r\n  }\r\n}\r\n"]}